1. git 이란 ?
- 코드 버전 관리 시스템
- 사용하는 목적 : 협업

1. 찐막, 찐찐막, 진짜 최종....
  -> 어느 게 최종이냐 ?
2. 0715, 0716, 0717 ...
  -> 뭘 고친거냐 ?
3. 0715, 0715-수정,  0716, 0716-수정,  0717, 0717-수정
  -> 용량 및 파일 개수가 너무 많아진다.
4. 0715-수정,  0716-수정,  0717-수정, 0717
  -> best

수정한 파일에 포함되어야 할 내용
  - 수정한 코드
  - 작성자
  - 날짜
  - 왜 고쳤는지

---------------------------------------------

1. 내 PC 에서 쓰는 git (local 환경)

1. 폴더 생성
- git 이 변경사항을 추적하고 있지 X

2. git init
- 앞으로 git 이 추적하는 폴더다~
- .git 폴더가 생성

3. git status
- 현재 git 폴더의 상태 (변화된 파일 등을 한 눈에 확인할 수 있는 명령어)
- untracked: 파일이 새로 생겼다

4. git add / git commit
- MM 의 사진을 참고하면서 학습
- git add -> Staging Area(대기실로 이동) -> git commit -> Repository(최종버전 저장소)

5. git log
- commit 내역들을 눈으로 확인하는 방법
- 나중에 log 가 길어지면 터미널에 갇힘. 'q' 누르면 탈출 가능하다.


---------------------------------------------

2. 같이 쓰는 거 (remote 환경) - github

연동방법 2가지

1. clone
  - 원격 저장소에 파일이 다 있을 때

2. git init
git remote add origin https://github.com/Junho-Seo/self-study.git
git pull origin master
  - 로컬에 먼저 파일이 있을 때 or
	원격 저장소에 없는 파일이 로컬에 있을 때

remote add : 원격 저장소를 추가하겠다
origin : 별명


git clone <주소>
- 원격 저장소 전체를 복사(다운로드)하는 것
- 최초 1번만 실행하면 된다.

git push/pull
- 원격 저장소에 변경사항 업로드/다운로드
- 최초 push/pull 진행 시, 어느 브랜치에 올려야 할 지 모름
  - 아래 명령어로 실행(이 후로는 그냥 git push/pull 만)
  - git push -u origin master
  - git pull origin master
  -u 옵션 : --set-upstream 
  (push/pull 은 origin 의 master 브랜치에서 가져오겠다.)

git remote add origin <주소>
- 원격 저장소와 로컬 저장소를 연동

git remote -v
- 연동 잘 되었는 지 확인하는 명령어


-------------------------------------

온라인 실습실
1. 문제 -> 실습하기 클릭
2. 코드 복사 붙여넣기
3. 좌측 하단 commit 버튼 클릭
4. commit to master branch 클릭
5. commit 클릭
6. 좌측 상단 메뉴 -> 실습 제출하기 클릭
